#: import get_color_from_hex kivy.utils.get_color_from_hex
#: import webbrowser webbrowser

<AuthScreen>
    uname: uname
    password: password

    canvas.before:
        Color:
            rgba: self.bg_color
        Rectangle:
            size: self.size
            pos: self.pos

    PIconButton2:
        id: btn_1
        disabled: True
        opacity: 0 if self.disabled else 1

        icon: "help"
        mode: "unstyled"
        pos_hint: {"center_x": .95, "center_y": .97}
        font_size: dp(20)
        text_color: get_color_from_hex("#B2B2B2")

        on_release:
            webbrowser.open("https://veilo.protdos.com/help")

    PIconButton2:
        id: btn_2
        disabled: True
        opacity: 0 if self.disabled else 1

        icon: "import"
        mode: "unstyled"
        pos_hint: {"center_x": .85, "center_y": .97}
        font_size: dp(20)
        text_color: get_color_from_hex("#B2B2B2")

        on_release:
            app.stop()

    PBoxLayout:
        id: form
        orientation: "vertical"
        disabled: True
        opacity: 0 if self.disabled else 1
        adaptive_height: True
        spacing: dp(15)
        pos_hint: {"center_x": .5, "center_y": .4}

        PTextField:
            id: uname
            text: ""
            hint_text: "Username"
            disabled: form.disabled
            size_hint: .7, None
            height: dp(40)
            pos_hint: {"center_x": .5}

            translate_x: 0
            translate_y: 0
            scale_x: 1
            scale_y: 1
            rotate: 0

            canvas.before:
                PushMatrix
                Translate:
                    x: self.translate_x or 0
                    y: self.translate_y or 0

                Rotate:
                    origin: self.center
                    angle: self.rotate or 0

                Scale:
                    origin: self.center
                    x: self.scale_x or 1
                    y: self.scale_y or 1
            canvas.after:
                PopMatrix


        PTextField:
            id: password
            text: ""
            hint_text: "Password"
            disabled: form.disabled
            password: True
            size_hint: .7, None
            height: dp(40)
            pos_hint: {"center_x": .5}

            translate_x: 0
            translate_y: 0
            scale_x: 1
            scale_y: 1
            rotate: 0

            canvas.before:
                PushMatrix
                Translate:
                    x: self.translate_x or 0
                    y: self.translate_y or 0

                Rotate:
                    origin: self.center
                    angle: self.rotate or 0

                Scale:
                    origin: self.center
                    x: self.scale_x or 1
                    y: self.scale_y or 1
            canvas.after:
                PopMatrix

        PIconButton2:
            id: btn
            icon: "eye"
            color: 0, 0, 0, 0.4
            mode: "unstyled"
            font_size: dp(25)
            text_color: get_color_from_hex("#B2B2B2")
            theme_text_color: "Custom"
            pos_hint: {"center_x": .84}

            on_release:
                root.show_password()

        #ProgressBar:
        #    id: pb_bar
        #    max: 100
        #    size_hint: .7, None
        #    y: password.y - password.height - 50
        #    pos_hint: {"center_x": .5}
        #    # padding: 0
        #    # border: [dp(2), dp(2), dp(2), dp(2)]
#
        #    canvas:
        #        BorderImage:
        #            border: (12, 12, 12, 12)
#
#
        #            pos: self.x, self.center_y
        #            size: self.width, 10
        #            source: 'white.jpg'
        #        BorderImage:
        #            border: [int(min(self.width * (self.value / float(self.max)) if self.max else 0, 5))] * 4
        #            pos: self.x, self.center_y
        #            size: self.width * (self.value / float(self.max)) if self.max else 0, 10
        #            source: 'red.png'

        Widget:
            size_hint_y: None
            height: dp(25)

        PBoxLayout:
            adaptive_size: True
            pos_hint: {"center_x": .5}
            spacing: dp(10)

            PButton:
                original: "Sign Up"
                text: self.original if app.language == 'EN' else app.translate(self.original)
                disabled: form.disabled
                on_release: app.signup(uname.text, password.text)

            PButton:
                original: "Sign In"
                text: self.original if app.language == 'EN' else app.translate(self.original)
                mode: "outlined"
                disabled: form.disabled
                on_release: app.login(uname.text, password.text)

    PBoxLayout:
        id: intro
        orientation: "vertical"
        adaptive_height: True
        pos_hint: {"center_x": .5, "center_y": .55}

        PLabel:
            id: title
            text: "veilo[size=150sp].[/size]"
            font_size: sp(100)
            markup: True
            font_name: "LexendMedium"
            text_color: 1, 1, 1, 1
            scale: 1
            adaptive_height: True
            canvas.before:
                PushMatrix
                Scale:
                    origin: self.center
                    x: self.scale
                    y: self.scale
            canvas.after:
                PopMatrix

        #PButton:
        #    id: intro_btn
        #    text: "Get Started"
        #    mode: "contained"
        #    text_color: 1, 1, 1, 1
        #    pos_hint: {"center_x": .5}
        #    on_release: root.show_form()

<AboutDialogContent2>
    adaptive_height: True
    padding: dp(20)
    spacing: dp(10)
    orientation: "vertical"

    PLabel:
        original: "Warning"
        text: self.original if app.language == 'EN' else app.translate(self.original)
        font_size: dp(20)
        font_name: "LexendMedium"
        adaptive_height: True

    PLabel:
        original: "This app has no functions as of now and should not / can't be used as a chat app as of right now."
        text: self.original if app.language == 'EN' else app.translate(self.original)
        text_size: self.width, None
        halign: "center"
        adaptive_height: True
